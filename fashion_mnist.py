# -*- coding: utf-8 -*-
"""fashion-mnist.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-kn_JckO0qlrUFe6w9WrbDYF7v-SUX3S
"""

import tensorflow as tf
print(tf.__version__)

class myCallback(tf.keras.callbacks.Callback):
  def on_epoch_end(self, epoch, logs={}):
    if(logs.get('acc')>=0.90):
      print("\nReached 90% accuracy so cancelling training!")
      self.model.stop_training = True

callbacks = myCallback()

#importing dataset directly from tf.keras database
mnist=tf.keras.datasets.fashion_mnist
(training_images,training_labels),(testing_images,testing_labels)=mnist.load_data()

import matplotlib.pyplot as plt 
plt.imshow(training_images[0])
print(training_labels[0])
print(training_images[0])

#normalizing and reshaping
training_images=training_images.reshape(60000, 28, 28, 1)
training_images=training_images / 255.0
testing_images = testing_images.reshape(10000, 28, 28, 1)
testing_images=testing_images/255.0

#defining the model
model = tf.keras.models.Sequential([
  tf.keras.layers.Conv2D(64, (3,3), activation='relu', input_shape=(28, 28, 1)),
  tf.keras.layers.MaxPooling2D(2, 2),
  tf.keras.layers.Conv2D(64, (3,3), activation='relu'),
  tf.keras.layers.MaxPooling2D(2,2),
  tf.keras.layers.Flatten(),
  tf.keras.layers.Dense(128, activation='relu'),
  tf.keras.layers.Dense(10, activation='softmax')
])

model.summary()

#buldling the model
model.compile(optimizer = tf.train.AdamOptimizer(),
              loss = 'sparse_categorical_crossentropy',
              metrics=['accuracy'])

#training the model
model.fit(training_images, training_labels, epochs=5, callbacks=[callbacks])

#evaluating the model
model.evaluate(testing_images, testing_labels)

